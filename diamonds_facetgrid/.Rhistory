energy.df<-energy.df[ which( energy.df[,"Country"] %in% setdiff( energy.df[,"Country"], Remove.country.vec) ), ]
energy.df<-energy.df[ -which( energy.df[,"Country"] %in% From.1991.vec &  energy.df[,"y"] < 1991), ]
energy.df<-energy.df[ -which( energy.df[,"Country"] == From.1993.vec &  energy.df[,"y"] < 1993), ]
### We still see a lot of strange dynamics in 2008 possibly related to the financial crisis - so for this first analysis let's onlylook at years up to that time.
energy.df <- energy.df[which(energy.df[,"y"] < 2008), ]
### mean consumption.balance index
energy.df <- energy.df[order(energy.df[,"Country"],energy.df[,"y"]),]
energy.df[,"Consum.balance.avg"]<-unlist(by(energy.df, energy.df[,"Country"], function(x) rep(mean(x[,"Consum.balance"]),nrow(x))))
#### consumption avg - data frame
energy.ConsumAvg.df<-unique(energy.df[,c("Country","Consum.balance.avg","mean.val","mean.gdp")])
### trend in energy consumption balance
energy.df <- energy.df[order(energy.df[,"Country"],energy.df[,"y"]),]
energy.df[,"ConsumBalance.y.trend"]<-unlist(by(energy.df,energy.df[,"Country"],function(x) rep(coef(lm(x[,"Consum.balance"]~x[,"y"]))[2],nrow(x))))
#### consumption balance trend - data frame
energy.consumtrend.df<-unique(energy.df[,c("Consum.balance.avg","mean.gdp.per.cap","ConsumBalance.y.trend","log10.mean.gdp.per.cap"),])
#########################################################################################################################################################################
#########################################################################################################################################################################
#########################################################################################################################################################################
## SETTING DIRECTORY FOR Wiedmann - material footprint - EORA DATA ON LOCAL HARD DRIVE
setwd(paste(eora.wd,"/Wiedmann",sep=""))
#dir()
#### We are interested in the following files
#"TradeBalance_CONSTMA.csv","TradeBalance_ORES.csv","TradeBalance_FFUEL.csv","TradeBalance_BIOMASS.csv","TradeBalance_I-CMFA-TOT.csv"
### We will read the files we are interested in into a list
dframes.list<-list()
## FOSSIL FUELS
dframes.list[["FFUEL"]]<-read.csv("TradeBalance_FFUEL.csv",header=T)
dframes.list[["FFUEL"]][,"NAME"]<-"FFUEL"
## BIOMASS
dframes.list[["BIOMASS"]]<-read.csv("TradeBalance_BIOMASS.csv",header=T)
dframes.list[["BIOMASS"]][,"NAME"]<-"BIOMASS"
## CONSTRUNCTION MATERIALS
dframes.list[["CONSTMA"]]<-read.csv("TradeBalance_CONSTMA.csv",header=T)
dframes.list[["CONSTMA"]][,"NAME"]<-"CONSTMA"
## ORES
dframes.list[["ORES"]]<-read.csv("TradeBalance_ORES.csv" ,header=T)
dframes.list[["ORES"]][,"NAME"]<-"ORES"
## ALL MATERIALS - FOSSIL FUELS, BIOMASS, CONSTRUCTION MATERIALS, ORES
dframes.list[["TOTAL"]]<-read.csv("TradeBalance_I-CMFA-TOT.csv",header=T)
dframes.list[["TOTAL"]][,"NAME"]<-"TOTAL"
#############
## I will attempt a cleaning function to prepare each data frame for analysi
prepare.dframe.fct<-function(i){
### cleaning data frame
i<-i[which(as.character(i$Country)!="Former USSR"),]#!(df1$id %in% idNums1)
i<-i[-which( i[,"y"] %in% c(1991,2000,2011)),]
i <- i[which(i[,"y"] < 2008), ]
i<-i[ which( i[,"Country"] %in% setdiff( i[,"Country"], Remove.country.vec) ), ]
i<-i[ -which( i[,"Country"] %in% From.1991.vec &  i[,"y"] < 1991), ]
i<-i[ -which( i[,"Country"] == From.1993.vec &  i[,"y"] < 1993), ]
### calculating structure of consumption
#### Territorial emissions as extraction
i[,"Extraction"]<-i[,"TerritorialEmissions"]
#### consumed resources that come from domestic extraction
i[,"Consum.extract"]<- (i[,"Extraction"]) -
(i[,"Exports"] * ((i[,"Extraction"]) /
(i[,"Extraction"] + i[,"Imports"])))
#### consumed resources that come from imports
i[,"Consum.import"]<- (i[,"Imports"]) -
(i[,"Exports"] * ((i[,"Imports"]) /
(i[,"Extraction"] + i[,"Imports"])))
#### consumption balance index
i[,"Consum.balance"]<-(i[,"Consum.extract"]-i[,"Consum.import"])/i[,"Consumption"]
i<-i[which(abs(i[,"Consum.balance"])<1),] ## removing entries that are above 1 (i.e. all resources being domestically extracted or imported)
### associating population size and gdp data with data frame - then calculating basic metrics for later analysis
#### merging the gdp and population size data onto the energy consumption data frame
i<-merge(i,gdppop.df,by=c("CountryA3","y","Country"),all.x=TRUE)
i <- i[order(i[,"Country"],i[,"y"]),]
i[,"mean.gdp"]<-unlist(tapply(i[,"GDP"],i[,"Country"],function(x) rep(mean(x,na.rm=TRUE),length(x))))
i[,"mean.val"]<-unlist(tapply(i[,"val"],i[,"Country"],function(x) rep(mean(x,na.rm=TRUE),length(x))))
i[,"mean.gdp.per.cap"]<-i[,"mean.gdp"]/i[,"mean.val"]
i[,"log10.mean.gdp.per.cap"]<-log10(i[,"mean.gdp.per.cap"])
val.membership.df<-data.frame("mean.val"=unique(i[,"mean.val"]),"val.membership"=NA)
val.membership.df[,"val.membership"]<-as.numeric(cut2(val.membership.df$mean.val,m=20))
i<-merge(i,val.membership.df,by="mean.val",all.x=TRUE)
### Calculating mean consumption balance
### mean consumption.balance index
i <- i[order(i[,"Country"],i[,"y"]),]
i[,"Consum.balance.avg"]<-unlist(by(i, i[,"Country"], function(x) rep(mean(x[,"Consum.balance"]),nrow(x))))
### Calculating trend in consumption balance
i <- i[order(i[,"Country"],i[,"y"]),]
i[,"ConsumBalance.y.trend"]<-unlist(by(i,i[,"Country"],function(x) rep(coef(lm(x[,"Consum.balance"]~x[,"y"]))[2],nrow(x))))
return(i)
}
## apply the data frame preparation function
dframes.list<-lapply(dframes.list,prepare.dframe.fct)
dframes.list[["ENERGY"]]<-energy.df
dframes.list[["ENERGY"]][,"NAME"]<-"ENERGY"
## Get the calculated averages and trends for each data frame
#ConsumTrend.df.list<-lapply(dframes.list,function(x) unique(x[,c("Country","Consum.balance.avg","ConsumBalance.y.trend","mean.val","mean.gdp","mean.gdp.per.cap","log10#.mean.gdp.per.cap","NAME")]))
#########################################################################################################################################################################
### MEDIAN FOOTPRINT VALUES IN AND CHANGE FROM FIRST AND TO SECOND TIME PERIOD
MF.df<-dframes.list[["TOTAL"]]
## per capita consumption
MF.df[,"Consumption.cap"]<-MF.df[,"Consumption"]/MF.df[,"val"]
MF.df[,"period"]<-NA
MF.df[,"period"]<-ifelse(MF.df[,"y"]<2000,"a",ifelse(MF.df[,"y"]>1999,"b",NA))
MF.vars<-c("TerritorialEmissions","Imports","Exports","DirectEmissions","Consumption","Extraction","Consum.extract","Consum.import","Consum.balance","GDP","val","Consumption.cap")
MF.df<-MF.df[order(MF.df$CountryA3),]
## MEDIAN FIRST PERIOD
MF.first<-as.data.frame(apply(MF.df[which(MF.df$y %in% c(1992:1999)),MF.vars],2,function(x,y=MF.df[which(MF.df$y %in% c(1992:1999)),"CountryA3"]) tapply(x,y,function(z) median(z,na.rm=TRUE))))
MF.first[,c("CountryA3","y")]<-cbind(rownames(MF.first),rep(1990,nrow(MF.first)))
MF.first.melt<-melt(MF.first,id.var=c("CountryA3","y"))
names(MF.first.melt)<-c("CountryA3","first.period","variable","first.value")
## MEDIAN SECOND PERIOD
MF.second<-as.data.frame(apply(MF.df[which(MF.df$y %in% c(2000:2008)),MF.vars],2,function(x,y=MF.df[which(MF.df$y %in% c(2000:2008)),"CountryA3"]) tapply(x,y,function(z) median(z,na.rm=TRUE))))
MF.second[,c("CountryA3","y")]<-cbind(rownames(MF.second),rep(2000,nrow(MF.second)))
MF.second.melt<-melt(MF.second,id.var=c("CountryA3","y"))
names(MF.second.melt)<-c("CountryA3","second.period","variable","second.value")
## MANN WHITNEY TEST
MUtest.list<-by(MF.df,MF.df[,"CountryA3"],function(x) apply(x[,MF.vars],2,function(y,z=x[,"period"],country=x[1,"CountryA3"],
w1=length(which(is.na(y[which(x$y %in% c(1992:1999))])==FALSE)),
w2=length(which(is.na(y[which(x$y %in% c(2000:2008))])==FALSE))) #print(c(w1,w2))
if(w1 > 2 & w2 > 2){c(unlist(kruskal.test(y, factor(z)))[1:3],country)} else {c(rep(NA,3),country)}#pairwise.wilcox.test
))
MUtest.list <- MUtest.list[lapply(MUtest.list,length)>0]
MUtest.df<-as.data.frame(t(do.call(cbind,lapply(MUtest.list,function(x) rbind(names(as.data.frame(x)),x)
))))
names(MUtest.df)<-c("varcode","KW.chisq","KW.dfres","KW.pval","CountryA3")
###############################
## MERGING MEDIANS OF FIRST AND SECOND PERIOD AND CALCULATING DIFFERENCE IN MEDIAN VALUE
MF.melt<-merge(MF.first.melt,MF.second.melt,by=c("CountryA3","variable"),all=TRUE)
MF.melt[,"diff.value"]<-MF.melt[,"second.value"]-MF.melt[,"first.value"]
## MERGING RESULTS FROM KRUSKAL WALLIS TESTS
MF.melt<-merge(MF.melt,MUtest.df,by.x=c("CountryA3","variable"),by.y=c("CountryA3","varcode"),all.x=TRUE)
#########################################################################################################################################################################
### MERGING MATERIAL FOOTPRINT DATA TO SOCIAL VARIABLES AND CALCULATING A CROSS-COUNTRY ELASTICITY OF SORTS BY GEOGRAPHICAL AND INCOME REGOINS AND PLOTTING IT
## MERGING MF CONSUMPTION DATA AND
#MF.melt<-merge(MF.melt,MUtest.df,by.x=c("CountryA3","variable"),by.y=c("CountryA3","varcode"),all.x=TRUE)
#QoG.sd.melt.plot<-QoG.sd.melt[which(is.na(QoG.sd.melt[,"continent"])==FALSE & is.na(QoG.sd.melt[,"income.region"])==FALSE),]
MF.melt.consum<-MF.melt[which(MF.melt[,"variable"]=="Consumption"),]
names(MF.melt.consum)[-c(1:2)]<-paste("consum",c("first.period","first.value","second.period","second.value","diff.value","KW.chisq","KW.dfres","KW.pval"),sep=".")
QoG.MF.df<-merge(QoG.sd.melt.plot,MF.melt.consum,by.x="ccodealp",by.y="CountryA3",all.x=TRUE)
QoG.MF.df[,"consum.diff.group"]<-ifelse(QoG.MF.df[,"consum.diff.value"]>0,"pos",ifelse(QoG.MF.df[,"consum.diff.value"]<0,"neg",NA))
QoG.MF.df.sub<-QoG.MF.df[complete.cases(QoG.MF.df[,c("diff.value","first.value","consum.first.value","consum.diff.value")]),]
## applying log modulus transformation
QoG.MF.df.sub[,c("diff.value.logmod","first.value.logmod","consum.first.value.logmod","consum.diff.value.logmod")]<-apply(
QoG.MF.df.sub[,c("diff.value","first.value","consum.first.value","consum.diff.value")],2, function(x) sign(x)*log(abs(x)+1))
## calculatig partial regression coefficients of initial social value, initial consumption value and change in consumption value on change in social value by income region
QoG.MF.region.df<-as.data.frame(do.call(rbind,
by(QoG.MF.df.sub,QoG.MF.df.sub[,"variable.x"], function(x) #c(nrow(unique(x)),nrow(x)))
do.call(rbind,
by(x,list(x[,"income.region4"]), function(y,z=summary(lm(y[,"diff.value.logmod"]~y[,"first.value.logmod"]+y[,"consum.first.value.logmod"]+y[,"consum.diff.value.logmod"]))[["coefficients"]]) #head(y))))
if(nrow(z)==4){
cbind(
matrix(c("Int","first.value","consum.first.value","consum.diff.value",rep(c(as.character(y[1,"income.region4"]),as.character(y[1,"variable.x"]),as.character(y[1,"social"])),each=4)),byrow=FALSE,ncol=4)
,z)
}
)))))
names(QoG.MF.region.df)<-c("parameter","income.region4","variable.x","social","est","se","tval","pval")
## calculatig partial regression coefficients of initial social value, initial consumption value and change in consumption value on change in social value by continent
QoG.MF.continent.df<-as.data.frame(do.call(rbind,
by(QoG.MF.df.sub,QoG.MF.df.sub[,"variable.x"], function(x)
do.call(rbind,
by(x,list(x[,"continent2"]), function(y,z=summary(lm(y[,"diff.value.logmod"]~y[,"first.value.logmod"]+y[,"consum.first.value.logmod"]+y[,"consum.diff.value.logmod"]))[["coefficients"]])
if(nrow(z)==4){
cbind(
matrix(c("Int","first.value","consum.first.value","consum.diff.value",rep(c(as.character(y[1,"continent2"]),as.character(y[1,"variable.x"]),as.character(y[1,"social"])),each=4)),byrow=FALSE,ncol=4)
,z)
}
)))))
names(QoG.MF.continent.df)<-c("parameter","continent2","variable.x","social","est","se","tval","pval")
## plotting partial regression coefficients of change in consumption with s.e. as error bars
QoG.MF.continent.df[,"social"]<-gsub("connectivity","technology",QoG.MF.continent.df[,"social"])
QoG.MF.region.df[,"social"]<-gsub("connectivity","technology",QoG.MF.region.df[,"social"])
QoG.MF.continent.df[,c("est","se","tval","pval")] <- apply(QoG.MF.continent.df[,c("est","se","tval","pval")],2,as.numeric)
QoG.MF.region.df[,c("est","se","tval","pval")] <- apply(QoG.MF.region.df[,c("est","se","tval","pval")],2,as.numeric)
###
QoG.MF.continent.df[,"pval.sign"]<-ifelse(QoG.MF.continent.df[,"pval"]<0.001,"***",ifelse(QoG.MF.continent.df[,"pval"]<0.01 & QoG.MF.continent.df[,"pval"]>0.001,"**",
ifelse(QoG.MF.continent.df[,"pval"]<0.05 & QoG.MF.continent.df[,"pval"]>0.01,"*","")))
###
QoG.MF.region.df[,"pval.sign"]<-ifelse(QoG.MF.region.df[,"pval"]<0.001,"***",ifelse(QoG.MF.region.df[,"pval"]<0.01 & QoG.MF.region.df[,"pval"]>0.001,"**",
ifelse(QoG.MF.region.df[,"pval"]<0.05 & QoG.MF.region.df[,"pval"]>0.01,"*","")))
#by income region
#x11()
#ggplot(QoG.MF.region.df[which(QoG.MF.region.df[,"parameter"]=="consum.diff.value"),],
#  aes(x=factor(income.region4,levels=c("High","Uppe","Lowe","Low ")),y=est))+geom_point()+ geom_errorbar(aes(ymax = est + se, ymin= est - se)) +
#  facet_wrap(~social+variable.x,scales="free",ncol=5)+ylab("consumption change elasticity")+xlab("income region")+geom_hline(x=0) +
#  geom_text(aes(y=est+(abs(est)*0.1),label = pval.sign, color="orange"))
#by continent
#x11()
#limits <- aes(ymax = est + se, ymin=est - se)
#ggplot(QoG.MF.continent.df[which(QoG.MF.continent.df[,"parameter"]=="consum.diff.value" & QoG.MF.continent.df[,"continent2"]!="Au"),],
#  aes(x=factor(continent2,levels=c("Af","As","Au","Eu","No","So")),y=est))+geom_point()+ geom_errorbar(aes(ymax = est + se, ymin= est - se)) +
#  facet_wrap(~social+variable.x,scales="free",ncol=5)+ylab("consumption change elasticity")+xlab("continent")+geom_hline(x=0) +
#  geom_text(aes(y=est,label = pval.sign, color="orange"))
################################################################################    PLOTTING INTERACTION BETWEEN INCREASING CONSUMPION AND DECREASNG CONSUMPION
## calculatig partial regression coefficients of initial social value, initial consumption value and change in consumption value on change in social value by income region
### which variables have both positive and negative consumption for the grouping variable (income regions)
QoG.MF.df.sub[,c("diff.value.logmod","first.value.logmod","consum.first.value.logmod","consum.diff.value.logmod")] <-
apply(QoG.MF.df.sub[,c("diff.value.logmod","first.value.logmod","consum.first.value.logmod","consum.diff.value.logmod")],2,as.numeric)
#int.sel.var.mat<-tapply(QoG.MF.df.sub[,"consum.diff.value"],list(QoG.MF.df.sub[,"income.region4"],QoG.MF.df.sub[,"variable.x"]), function(x)
#  min(c(length(which(sign(x)==-1)),length(which(sign(x)==1)))))
#length(unique(sign(x))))
#int.sel.var.df<-as.data.frame(
#  cbind(rep(colnames(int.sel.var.mat),each=nrow(int.sel.var.mat)),
#  rep(row.names(int.sel.var.mat),ncol(int.sel.var.mat)),
#  c(int.sel.var.mat))
#  )
#names(int.sel.var.df)<-c("variable.x","income.region4","number")
#int.sel.var.df[,"number"]<-as.numeric(as.character(int.sel.var.df[,"number"]))
#int.sel.var.df<-int.sel.var.df[which(int.sel.var.df[,"number"]>4),]
varnumber.df<-as.data.frame(cbind(names(table(QoG.MF.df.sub[,"variable.x"])),table(QoG.MF.df.sub[,"variable.x"])))
varnumber.df[,2]<-as.numeric(as.character(varnumber.df[,2]))
varnumber.df[,1]<-as.character(varnumber.df[,1])
names(varnumber.df)<-c("variable.x","number")
QoG.MF.df.sub.int<-QoG.MF.df.sub[which(QoG.MF.df.sub[,"variable.x"]  %in% varnumber.df[which(varnumber.df[,"number"]>100),"variable.x"]),]
#paste(int.sel.var.df[,"variable.x"],int.sel.var.df[,"income.region4"],sep="")),]
QoG.MF.df.sub.int[,c("diff.value.logmod","first.value.logmod","consum.first.value.logmod","consum.diff.value.logmod")] <-
apply(QoG.MF.df.sub.int[,c("diff.value.logmod","first.value.logmod","consum.first.value.logmod","consum.diff.value.logmod")],2,as.numeric)
QoG.MF.df.sub.int[,"variable.x"]<-as.character(QoG.MF.df.sub.int[,"variable.x"])
#QoG.MF.df.sub.int[,"consum.diff.group"]
#####
QoG.MF.region.int.df<-as.data.frame(do.call(rbind,
by(QoG.MF.df.sub.int,QoG.MF.df.sub.int[,"variable.x"],
#do.call(rbind,
#by(x,list(x[,"income.region4"]),
function(y,z=summary(lm(y[,"diff.value.logmod"]~y[,"first.value.logmod"]+y[,"consum.first.value.logmod"]+y[,"consum.diff.group"]*y[,"consum.diff.value.logmod"]))[["coefficients"]]) #apply(y,2,class))
if(nrow(z)==6){
cbind(
matrix(c("Int","first.value","consum.first.value","consum.diff.group","consum.diff.value","consum.diff.int",rep(c(as.character(y[1,"variable.x"]),as.character(y[1,"social"])),each=6)),byrow=FALSE,ncol=3)
,z)
}
)))#))
names(QoG.MF.region.int.df)<-c("parameter","variable.x","social","est","se","tval","pval")
## plotting partial regression coefficients of change in consumption with s.e. as error bars
## removing duplicate groups
#QoG.MF.continent.int.df[,"social"]<-gsub("connectivity","technology",QoG.MF.continent.int.df[,"social"])
QoG.MF.region.int.df[,"social"]<-gsub("connectivity","technology",QoG.MF.region.int.df[,"social"])
## numeric estimates
#QoG.MF.continent.int.df[,c("est","se","tval","pval")] <- apply(QoG.MF.continent.int.df[,c("est","se","tval","pval")],2,as.numeric)
QoG.MF.region.int.df[,c("est","se","tval","pval")] <- apply(QoG.MF.region.int.df[,c("est","se","tval","pval")],2,as.numeric)
## p value signs
#QoG.MF.continent.int.df[,"pval.sign"]<-ifelse(QoG.MF.continent.int.df[,"pval"]<0.001,"***",ifelse(QoG.MF.continent.int.df[,"pval"]<0.01 & QoG.MF.continent.int.df[,"pval"]>0.001,"**",
#                                          ifelse(QoG.MF.continent.int.df[,"pval"]<0.05 & QoG.MF.continent.int.df[,"pval"]>0.01,"*","")))
QoG.MF.region.int.df[,"pval.sign"]<-ifelse(QoG.MF.region.int.df[,"pval"]<0.001,"***",ifelse(QoG.MF.region.int.df[,"pval"]<0.01 & QoG.MF.region.int.df[,"pval"]>0.001,"**",
ifelse(QoG.MF.region.int.df[,"pval"]<0.05 & QoG.MF.region.int.df[,"pval"]>0.01,"*","")))
## creating a group variable to distinguish main covariate and intersection
QoG.MF.region.int.df<-QoG.MF.region.int.df[which(QoG.MF.region.int.df[,"parameter"] %in% c("consum.diff.value","consum.diff.int")),]
QoG.MF.region.int.df[,"consum"]<-ifelse(QoG.MF.region.int.df[,"parameter"]=="consum.diff.value","neg","pos")
#QoG.MF.continent.int.df<-QoG.MF.continent.int.df[which(QoG.MF.continent.int.df[,"parameter"] %in% c("consum.diff.value","consum.diff.int")),]
#QoG.MF.continent.int.df[,"consum"]<-ifelse(QoG.MF.continent.int.df[,"parameter"]=="consum.diff.value","neg","pos")
#by income region
#x11()
#dodge<-position_dodge(width=0.9)
#ggplot(QoG.MF.region.int.df,
#  aes(x=variable.x,y=est,color=consum))+
#  geom_point(position=dodge)+ geom_errorbar(aes(ymax = est + se, ymin= est - se),position=dodge) +
#  facet_wrap(~social+variable.x,scales="free",ncol=5)+ylab("consumption change elasticity")+xlab("income region")+geom_hline(x=0)+
#  geom_text(aes(label = pval.sign),position="dodge")#est+(abs(est)*0.01
#############################################################################################################################################################################
#MF.df CALCULATE PER CAPITA CONSUMPTION
MF.df[,"Consumption.cap"]<-MF.df[,"Consumption"]/MF.df[,"val"]
### MELT AND MERGE SOCIAL AND MATERIAL USE DATA FRAMES
QoG.sel.df.melt<-melt(QoG.sel.df[,c("ccodealp","year",sel.vars)],id.vars=c("ccodealp","year"))
MF.QoG.melt.df<-merge(QoG.sel.df.melt,MF.df,by.x=c("ccodealp","year"),by.y=c("CountryA3","y"),all.x=TRUE)
#MF.QoG.melt.df[,"sd.value"]<-MF.QoG.melt.df[,"rel.value"]
# standardizing social values to sd = 1
MF.QoG.melt.df[,"variable.ccodealp"]<-paste(MF.QoG.melt.df[,"variable"],MF.QoG.melt.df[,"ccodealp"],sep=".")
MF.QoG.melt.df<-MF.QoG.melt.df[order(MF.QoG.melt.df[,"variable.ccodealp"]),]
MF.QoG.melt.df[,"value.sd"]<-c(unlist(  tapply(MF.QoG.melt.df[,"value"],MF.QoG.melt.df[,"variable.ccodealp"],function(x)
rep(sd(x,na.rm=TRUE),length(x)))))
MF.QoG.melt.df[,"sd.value"]<-MF.QoG.melt.df[,"value"]/MF.QoG.melt.df[,"value.sd"]
# standardizing consumption values to sd = 1
MF.QoG.melt.df<-MF.QoG.melt.df[order(MF.QoG.melt.df[,"variable.ccodealp"]),]
MF.QoG.melt.df[,"consum.sd"]<-c(unlist(  tapply(MF.QoG.melt.df[,"Consumption.cap"],MF.QoG.melt.df[,"variable.ccodealp"],function(x)
rep(sd(x,na.rm=TRUE),length(x)))))
MF.QoG.melt.df[,"sd.consum"]<-MF.QoG.melt.df[,"Consumption.cap"]/MF.QoG.melt.df[,"consum.sd"]
###
MF.QoG.melt.df[,"value.per.consum.SD"]<-MF.QoG.melt.df[,"sd.value"]/MF.QoG.melt.df[,"sd.consum"]
MF.QoG.melt.df[,"value.per.consum"]<-MF.QoG.melt.df[,"value"]/MF.QoG.melt.df[,"Consumption.cap"]
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df[which(as.character(MF.QoG.melt.df$variable) == "mad_gdppc"
& MF.QoG.melt.df$ccodealp %in% c("DNK","SWE","NOR","FIN","UKR")
& MF.QoG.melt.df$year %in% c(1992:1999,2001:2007)),]
max.total<-max(MF.QoG.melt.df.ggvis[,c("value","Consumption.cap","value.per.consum")],na.rm=TRUE)
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-apply(MF.QoG.melt.df.ggvis[,c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[,c("value","Consumption.cap","value.per.consum")]))
(x*max.total)/(max(x,na.rm=TRUE)*max.total)
)
MF.QoG.melt.df.ggvis.melt<-melt(MF.QoG.melt.df.ggvis[,c("ccodealp","year","value.u","Consumption.cap.u","value.per.consum.u")],id.vars=c("ccodealp","year"))
#MF.QoG.melt.df.ggvis %>% ggvis(~year, ~value.per.consum,stroke= ~ccodealp) %>%
#  layer_points() %>%
#  layer_lines()
#x11()
#par(mfrow = c(2,2))
MF.QoG.melt.df.ggvis %>% ggvis(~year, ~value.per.consum.u,stroke= ~ccodealp) %>%
layer_lines()
MF.QoG.melt.df.ggvis %>% ggvis(~year, ~value.per.consum.u,stroke= ~ccodealp) %>%
layer_lines() %>% layer_points(fill= ~ccodealp)
ggplot(MF.QoG.melt.df.ggvis.melt,aes(x=year,y=value,color=ccodealp)) +
geom_point()+geom_line()+facet_wrap(~variable,scales="free")
#mtcars %>%
#  ggvis(~wt, ~mpg, fill = ~factor(cyl)) %>%
#  layer_points() %>%
#  group_by(cyl) %>%
#  layer_model_predictions(model = "lm")
###################     SELECTING MANY VARIABLES AND STANDARDIZING WITHIN
app.vars<-c("SI.DST.04TH.20","SI.DST.10TH.10","SI.DST.FRST.10","SI.DST.FRST.20","mad_gdppc")#,"SI.POV.NAHC.NC",,"SI.POV.5DAY","SI.POV.GAP5","SI.POV.GINI","SI.POV.NAGP","SI.POV.NAGP.NC","SI.POV.NAHC"
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df[which(as.character(MF.QoG.melt.df$variable) %in% app.vars
& MF.QoG.melt.df$ccodealp %in% c("DNK","SWE","NOR","FIN","UKR")
& MF.QoG.melt.df$year %in% c(1992:1999,2001:2007)),]
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-NA
MF.QoG.melt.df.ggvis
for(i in 1:length(app.vars)){
max.total<-max(c(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")]),na.rm=TRUE)
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value.u","Consumption.cap.u","value.per.consum.u")]<-apply(
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],na.rm=TRUE))
(x*max.total)/(max(x,na.rm=TRUE)*max.total)
)
}
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df.ggvis[complete.cases(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")]),]
MF.QoG.melt.df.ggvis.melt<-melt(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")],id.vars=c("variable","ccodealp","year"))
names(MF.QoG.melt.df.ggvis.melt)<-c("variable","ccodealp","year","metric","value")
names(MF.QoG.melt.df.ggvis.melt)
head(MF.QoG.melt.df.ggvis)
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df[which(as.character(MF.QoG.melt.df$variable) %in% app.vars
& MF.QoG.melt.df$ccodealp %in% c("DNK","SWE","NOR","FIN","UKR")
& MF.QoG.melt.df$year %in% c(1992:1999,2001:2007)),]
head(MF.QoG.melt.df.ggvis)
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-NA
for(i in 1:length(app.vars)){
max.total<-max(c(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")]),na.rm=TRUE)
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value.u","Consumption.cap.u","value.per.consum.u")]<-as.data.frame(apply(
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],na.rm=TRUE))
(x*max.total)/(max(x,na.rm=TRUE)*max.total)
))
}
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-NA
for(i in 1:length(app.vars)){
max.total<-max(unlist(c(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")])),na.rm=TRUE)
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value.u","Consumption.cap.u","value.per.consum.u")]<-as.data.frame(apply(
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],na.rm=TRUE))
(x*max.total)/(max(x,na.rm=TRUE)*max.total)
))
}
head(MF.QoG.melt.df.ggvis)
dim(MF.QoG.melt.df.ggvis)
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df.ggvis[complete.cases(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")]),]
dim(MF.QoG.melt.df.ggvis)
MF.QoG.melt.df.ggvis.melt<-melt(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")],id.vars=c("variable","ccodealp","year"))
names(MF.QoG.melt.df.ggvis.melt)<-c("variable","ccodealp","year","metric","value")
dim(MF.QoG.melt.df.ggvis.melt)
MF.QoG.melt.df.ggvis.melt<-MF.QoG.melt.df.ggvis.melt[complete.cases(MF.QoG.melt.df.ggvis.melt),]
dim(MF.QoG.melt.df.ggvis.melt)
head(MF.QoG.melt.df.ggvis.melt)
shiny::runApp('G:/Documents/PostDocKVA/Labbook/projects/macro-socio-ecology/diamonds_facetgrid')
getwd()
setwd("G:/Documents/PostDocKVA/Labbook/projects/macro-socio-ecology/diamonds_facetgrid")
shiny::runApp('G:/Documents/PostDocKVA/Labbook/projects/macro-socio-ecology/diamonds_facetgrid')
?load
shiny::runApp()
shiny::runApp()
shiny::runApp()
save(file="MFSocialMelt.RData",MF.QoG.melt.df.ggvis.melt)
getwd()
shiny::runApp()
shiny::runApp()
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df[which(as.character(MF.QoG.melt.df$variable) %in% app.vars
& MF.QoG.melt.df$ccodealp %in% c("DNK","SWE","NOR","FIN","UKR")
& MF.QoG.melt.df$year %in% c(1992:1999,2001:2007)),]
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-NA
for(i in 1:length(app.vars)){
max.total<-max(unlist(c(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")])),na.rm=TRUE)
##
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value.u","Consumption.cap.u","value.per.consum.u")]<-as.data.frame(apply(
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")],na.rm=TRUE))
(x-min(x,na.rm=TRUE))/(max(x,na.rm=TRUE)-min(x,na.rm=TRUE))
#(x*max.total)/(max(x,na.rm=TRUE)*max.total)
))
}
##
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df.ggvis[complete.cases(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")]),]
MF.QoG.melt.df.ggvis.melt<-melt(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")],id.vars=c("variable","ccodealp","year"))
names(MF.QoG.melt.df.ggvis.melt)<-c("variable","ccodealp","year","metric","value")
MF.QoG.melt.df.ggvis.melt<-MF.QoG.melt.df.ggvis.melt[complete.cases(MF.QoG.melt.df.ggvis.melt),]
save(file="MFSocialMelt.RData",MF.QoG.melt.df.ggvis.melt)
getwd()
shiny::runApp()
app.vars<-c("SI.DST.04TH.20","SI.DST.10TH.10","SI.DST.FRST.10","SI.DST.FRST.20","mad_gdppc","SI.POV.5DAY","SI.POV.GAP5")#,"SI.POV.NAHC.NC",,"SI.POV.5DAY","SI.POV.GAP5","SI.POV.GINI","SI.POV.NAGP","SI.POV.NAGP.NC","SI.POV.NAHC"
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df[which(as.character(MF.QoG.melt.df$variable) %in% app.vars
& MF.QoG.melt.df$ccodealp %in% c("DNK","SWE","NOR","FIN","UKR","DEU")
& MF.QoG.melt.df$year %in% c(1992:1999,2001:2007)),]
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-NA
for(i in 1:length(app.vars)){
max.total<-max(unlist(c(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")])),na.rm=TRUE)
##
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value.u","Consumption.cap.u","value.per.consum.u")]<-as.data.frame(apply(
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")],na.rm=TRUE))
(x-min(x,na.rm=TRUE))/(max(x,na.rm=TRUE)-min(x,na.rm=TRUE))
#(x*max.total)/(max(x,na.rm=TRUE)*max.total)
))
}
##
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df.ggvis[complete.cases(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")]),]
MF.QoG.melt.df.ggvis.melt<-melt(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")],id.vars=c("variable","ccodealp","year"))
names(MF.QoG.melt.df.ggvis.melt)<-c("variable","ccodealp","year","metric","value")
MF.QoG.melt.df.ggvis.melt<-MF.QoG.melt.df.ggvis.melt[complete.cases(MF.QoG.melt.df.ggvis.melt),]
save(file="MFSocialMelt.RData",MF.QoG.melt.df.ggvis.melt)
shiny::runApp()
sort(unique(MF.QoG.melt.df$variable)))
sort(unique(MF.QoG.melt.df$variable))
sort(unique(MF.QoG.melt.df$ccodealp))
app.vars<-c("SI.DST.04TH.20","SI.DST.10TH.10","SI.DST.FRST.10","SI.DST.FRST.20","mad_gdppc","SI.POV.5DAY","SI.POV.GAP5","wdi_unempilo","wdi_internetuse","wdi_mobile")#,"SI.POV.NAHC.NC",,"SI.POV.5DAY","SI.POV.GAP5","SI.POV.GINI","SI.POV.NAGP","SI.POV.NAGP.NC","SI.POV.NAHC"
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df[which(as.character(MF.QoG.melt.df$variable) %in% app.vars
& MF.QoG.melt.df$ccodealp %in% c("DNK","SWE","NOR","FIN","UKR","DEU","ESP","FRA")
& MF.QoG.melt.df$year %in% c(1992:1999,2001:2007)),]
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-NA
for(i in 1:length(app.vars)){
max.total<-max(unlist(c(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")])),na.rm=TRUE)
##
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value.u","Consumption.cap.u","value.per.consum.u")]<-as.data.frame(apply(
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")],na.rm=TRUE))
(x-min(x,na.rm=TRUE))/(max(x,na.rm=TRUE)-min(x,na.rm=TRUE))
#(x*max.total)/(max(x,na.rm=TRUE)*max.total)
))
}
##
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df.ggvis[complete.cases(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")]),]
MF.QoG.melt.df.ggvis.melt<-melt(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")],id.vars=c("variable","ccodealp","year"))
names(MF.QoG.melt.df.ggvis.melt)<-c("variable","ccodealp","year","metric","value")
MF.QoG.melt.df.ggvis.melt<-MF.QoG.melt.df.ggvis.melt[complete.cases(MF.QoG.melt.df.ggvis.melt),]
save(file="MFSocialMelt.RData",MF.QoG.melt.df.ggvis.melt)
shiny::runApp()
sort(unique(MF.QoG.melt.df$ccodealp))
sort(unique(MF.QoG.melt.df$variable))
app.vars<-c("SI.DST.04TH.20","SI.DST.10TH.10","SI.DST.FRST.10","SI.DST.FRST.20","mad_gdppc","SI.POV.5DAY","SI.POV.GAP5","wdi_unempilo","wdi_internetuse","wdi_mobile","une_imr","une_leb")#,"SI.POV.NAHC.NC",,"SI.POV.5DAY","SI.POV.GAP5","SI.POV.GINI","SI.POV.NAGP","SI.POV.NAGP.NC","SI.POV.NAHC"
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df[which(as.character(MF.QoG.melt.df$variable) %in% app.vars
& MF.QoG.melt.df$ccodealp %in% c("DNK","SWE","NOR","FIN","UKR","DEU","ESP","FRA","POL")
& MF.QoG.melt.df$year %in% c(1992:1999,2001:2007)),]
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-NA
for(i in 1:length(app.vars)){
max.total<-max(unlist(c(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")])),na.rm=TRUE)
##
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value.u","Consumption.cap.u","value.per.consum.u")]<-as.data.frame(apply(
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")],na.rm=TRUE))
(x-min(x,na.rm=TRUE))/(max(x,na.rm=TRUE)-min(x,na.rm=TRUE))
#(x*max.total)/(max(x,na.rm=TRUE)*max.total)
))
}
##
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df.ggvis[complete.cases(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")]),]
MF.QoG.melt.df.ggvis.melt<-melt(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")],id.vars=c("variable","ccodealp","year"))
names(MF.QoG.melt.df.ggvis.melt)<-c("variable","ccodealp","year","metric","value")
MF.QoG.melt.df.ggvis.melt<-MF.QoG.melt.df.ggvis.melt[complete.cases(MF.QoG.melt.df.ggvis.melt),]
save(file="MFSocialMelt.RData",MF.QoG.melt.df.ggvis.melt)
shiny::runApp()
hist(MF.QoG.melt.df.ggvis$value)
hist(MF.QoG.melt.df.ggvis$value,nclass=100)
sort(MF.QoG.melt.df.ggvis$value)
sort(MF.QoG.melt.df.ggvis$value*sign(MF.QoG.melt.df.ggvis))
sort(MF.QoG.melt.df.ggvis$value*sign(MF.QoG.melt.df.ggvis$value))
app.vars<-c("SI.DST.04TH.20","SI.DST.10TH.10","SI.DST.FRST.10","mad_gdppc","SI.POV.5DAY","wdi_unempilo","wdi_internetuse","wdi_mobile","une_imr","une_leb")#,"SI.POV.NAHC.NC",,"SI.POV.5DAY","SI.POV.GAP5","SI.POV.GINI","SI.POV.NAGP","SI.POV.NAGP.NC","SI.POV.NAHC","SI.POV.GAP5",,"SI.DST.FRST.20"
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df[which(as.character(MF.QoG.melt.df$variable) %in% app.vars
& MF.QoG.melt.df$ccodealp %in% c("DNK","SWE","NOR","FIN","UKR","DEU","ESP","FRA","POL")
& MF.QoG.melt.df$year %in% c(1992:1999,2001:2007)),]
MF.QoG.melt.df.ggvis[,"value"]<-MF.QoG.melt.df.ggvis$value*sign(MF.QoG.melt.df.ggvis$value)
MF.QoG.melt.df.ggvis[,c("value.u","Consumption.cap.u","value.per.consum.u")]<-NA
for(i in 1:length(app.vars)){
max.total<-max(unlist(c(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")])),na.rm=TRUE)
##
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value.u","Consumption.cap.u","value.per.consum.u")]<-as.data.frame(apply(
MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),c("value","Consumption.cap","value.per.consum")],2,
function(x,y=max(MF.QoG.melt.df.ggvis[which(MF.QoG.melt.df.ggvis$variable==app.vars[i]),
c("value","Consumption.cap","value.per.consum")],na.rm=TRUE))
(x-min(x,na.rm=TRUE))/(max(x,na.rm=TRUE)-min(x,na.rm=TRUE))
#(x*max.total)/(max(x,na.rm=TRUE)*max.total)
))
}
##
MF.QoG.melt.df.ggvis<-MF.QoG.melt.df.ggvis[complete.cases(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")]),]
MF.QoG.melt.df.ggvis.melt<-melt(MF.QoG.melt.df.ggvis[,
c("ccodealp","year","variable","value.u","Consumption.cap.u","value.per.consum.u")],id.vars=c("variable","ccodealp","year"))
names(MF.QoG.melt.df.ggvis.melt)<-c("variable","ccodealp","year","metric","value")
MF.QoG.melt.df.ggvis.melt<-MF.QoG.melt.df.ggvis.melt[complete.cases(MF.QoG.melt.df.ggvis.melt),]
save(file="MFSocialMelt.RData",MF.QoG.melt.df.ggvis.melt)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?runApp
